# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rb/api/led.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rb.api import color_pb2 as rb_dot_api_dot_color__pb2
from rb.api import header_pb2 as rb_dot_api_dot_header__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10rb/api/led.proto\x12\x06rb.api\x1a\x12rb/api/color.proto\x1a\x13rb/api/header.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\x89\x02\n\x12SetLEDColorRequest\x12-\n\x0erequest_header\x18\x01 \x01(\x0b\x32\x15.rb.api.RequestHeader\x12\x1c\n\x05\x63olor\x18\x02 \x01(\x0b\x32\r.rb.api.Color\x12+\n\x08\x64uration\x18\x03 \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x32\n\x0ftransition_time\x18\x04 \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x10\n\x08\x62linking\x18\x05 \x01(\x08\x12\x33\n\rblinking_freq\x18\x06 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\"F\n\x13SetLEDColorResponse\x12/\n\x0fresponse_header\x18\x01 \x01(\x0b\x32\x16.rb.api.ResponseHeaderb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'rb.api.led_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_SETLEDCOLORREQUEST']._serialized_start=134
  _globals['_SETLEDCOLORREQUEST']._serialized_end=399
  _globals['_SETLEDCOLORRESPONSE']._serialized_start=401
  _globals['_SETLEDCOLORRESPONSE']._serialized_end=471
# @@protoc_insertion_point(module_scope)
