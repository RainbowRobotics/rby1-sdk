syntax = "proto3";

package rb.api;

import "rb/api/header.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";

message ControlManagerState {
  enum State {
    CONTROL_MANAGER_STATE_UNKNOWN = 0;
    CONTROL_MANAGER_STATE_IDLE = 1;
    CONTROL_MANAGER_STATE_ENABLED = 2;
    CONTROL_MANAGER_STATE_MINOR_FAULT = 3;
    CONTROL_MANAGER_STATE_MAJOR_FAULT = 4;
  }
  State state = 1;

  double time_scale = 2;

  enum ControlState {
    CONTROL_STATE_UNKNOWN = 0;
    CONTROL_STATE_IDLE = 1;
    CONTROL_STATE_EXECUTING = 2;
    CONTROL_STATE_SWITCHING = 3;
  }
  ControlState control_state = 3;

  repeated uint32 enabled_joint_idx = 4;

  bool unlimited_mode_enabled = 5;
}

message ControlManagerCommandRequest {
  // Request header
  RequestHeader request_header = 1;

  // Control manager command
  enum Command {
    COMMAND_UNKNOWN = 0;
    COMMAND_ENABLE = 1;
    COMMAND_DISABLE = 2;
    COMMAND_RESET_FAULT = 3;
  }
  Command command = 2;

  google.protobuf.BoolValue unlimited_mode_enabled = 3;
}

message ControlManagerCommandResponse {
  // Response header
  ResponseHeader response_header = 1;

  ControlManagerState control_manager_state = 2;
}

message GetTimeScaleRequest {
  // Request header
  RequestHeader request_header = 1;
}

message GetTimeScaleResponse {
  // Response header
  ResponseHeader response_header = 1;

  double time_scale = 2;
}

message SetTimeScaleRequest {
  // Request header
  RequestHeader request_header = 1;

  double time_scale = 2;
}

message SetTimeScaleResponse {
  // Response header
  ResponseHeader response_header = 1;

  double current_time_scale = 2;
}

message CancelControlRequest {
  // Request header
  RequestHeader request_header = 1;
}

message CancelControlResponse {
  // Response header
  ResponseHeader response_header = 1;
}

message WaitForControlReadyRequest {
  // Request header
  RequestHeader request_header = 1;

  google.protobuf.Duration timeout = 2;
}

message WaitForControlReadyResponse {
  // Response header
  ResponseHeader response_header = 1;

  bool ready = 3;
}